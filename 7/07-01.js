http = require('http');
url = require('url');
static = require('./m07-01')('static');

http.createServer(function(request, response) {
    if (request.method == 'GET') {
        static.processStatic(url.parse(request.url).pathname, response);
    } else {
        response.writeHead(405, {'Content-type': 'text/plain'});
        response.end('MISTAKE ERROR VERY BAD'); // Method not allowed
    }
}).listen(5000);
console.log('http://localhost:5000');

/* методы могут быть безопасными, идемпотентными или кэшируемыми
 * 
 * Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд, имеет один и тот же эффект, 
 * не изменяющий состояние сервера. Другими словами, идемпотентный метод не должен иметь никаких побочных эффектов (side-effects), 
 * кроме сбора статистики или подобных операций. Корректно реализованные методы GET, HEAD, PUT и DELETE идемпотентны, но не метод POST.
 *
GET
    Метод GET запрашивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.
HEAD
    HEAD запрашивает ресурс так же, как и метод GET, но без тела ответа.
POST
    POST используется для отправки сущностей к определённому ресурсу. Часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
PUT
    PUT заменяет все текущие представления ресурса данными запроса.
DELETE
    DELETE удаляет указанный ресурс.
CONNECT
    CONNECT устанавливает "туннель" к серверу, определённому по ресурсу.
OPTIONS
    OPTIONS используется для описания параметров соединения с ресурсом.
TRACE
    TRACE выполняет вызов возвращаемого тестового сообщения с ресурса.
PATCH
    PATCH используется для частичного изменения ресурса.
 * 
 */